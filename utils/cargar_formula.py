# ------------------------------------------------------------------------------
# FORMULATOR ‚Äì Uso exclusivo de Iv√°n Navarro
# Todos los derechos reservados ¬© 2025
# Este archivo forma parte de un software no libre y no est√° autorizado su uso
# ni distribuci√≥n sin consentimiento expreso y por escrito del autor.
# ------------------------------------------------------------------------------

import streamlit as st
import pandas as pd
import json
from utils.supabase_client import supabase
from utils.formula_resultados import calcular_resultado_formula

def cargar_formula_por_id(formula_id: str):
    """
    Carga y muestra una f√≥rmula en modo solo lectura, a partir del ID en Supabase.

    Args:
        formula_id (str): UUID de la f√≥rmula a cargar.
    """
    st.subheader("üìÑ F√≥rmula guardada")

    try:
        response = supabase.table("formulas").select("*").eq("id", formula_id).single().execute()
        data = response.data

        if data is None:
            st.error("‚ùå No se encontr√≥ ninguna f√≥rmula con ese ID.")
            return

        nombre = data["nombre"]
        precio = data["precio_total"]
        materias_primas = pd.DataFrame(json.loads(data["materias_primas"]))

        st.markdown(f"### üß™ **{nombre}**")
        st.markdown(f"**üí∞ Precio por kg:** {precio:.2f} ‚Ç¨")

        # üîí Reordenar y renombrar columna % para mejor visualizaci√≥n
        materias_vista = materias_primas.copy()
        if "%" in materias_vista.columns:
            materias_vista.rename(columns={"%": "Porcentaje"}, inplace=True)
            cols = materias_vista.columns.tolist()
            if "Porcentaje" in cols and "Materia Prima" in cols:
                cols = [col for col in cols if col in ["Materia Prima", "Porcentaje"]]
                materias_vista = materias_vista[cols]

        st.dataframe(materias_vista, use_container_width=True)

        columnas = [col for col in materias_primas.columns if col not in ["id", "Materia Prima", "Precio ‚Ç¨/kg", "%"]]
        precio_calc, composicion = calcular_resultado_formula(materias_primas, columnas)

        st.markdown("#### üìä Composici√≥n estimada")
        composicion = composicion[composicion["Cantidad %"] > 0]  # ‚ùå Eliminar valores cero
        if not composicion.empty:
            composicion_formateada = composicion.reset_index()
            composicion_formateada.columns = ["Par√°metro", "% p/p"]
            st.markdown(composicion_formateada.to_html(index=False), unsafe_allow_html=True)
        else:
            st.info("No hay par√°metros significativos en la f√≥rmula.")
    except Exception as e:
        st.error(f"‚ö†Ô∏è Error al cargar la f√≥rmula: {e}")

